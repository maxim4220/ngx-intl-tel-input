{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","CountryCode","_enums_country_iso_enum__WEBPACK_IMPORTED_MODULE_0__","factory","NativeElementInjectorDirective","controlDir","host","control","nativeElement","_angular_core__WEBPACK_IMPORTED_MODULE_0__","selectors","CountryISO","PhoneNumberFormat","SearchCountryField","_angular_core__WEBPACK_IMPORTED_MODULE_6__","$event","ctx_r3","NgxIntlTelInputComponent","countryCodeData","cdr","_enums_phone_number_format_enum__WEBPACK_IMPORTED_MODULE_3__","_enums_search_country_field_enum__WEBPACK_IMPORTED_MODULE_1__","areaCodes","undefined","dialCode","htmlId","flagClass","iso2","name","placeHolder","priority","google_libphonenumber__WEBPACK_IMPORTED_MODULE_7__","defaultPhoneMask","_","init","changes","selectedISO","allCountries","currentValue","previousValue","updateSelectedCountry","preferredCountries","updatePreferredCountries","checkSeparateDialCodeStyle","fetchCountryData","length","onlyCountries","filter","c","includes","selectFirstCountry","preferredCountriesInDropDown","setSelectedCountry","country","selectedCountry","countryChange","emit","countrySearchText","countryList","querySelector","scrollIntoView","behavior","block","inline","countrySearchTextLower","toLowerCase","searchCountryField","indexOf","startsWith","el","countryCode","phoneNumber","numberObj","number","value","getParsedNumber","enableAutoCountrySelect","getCountryCode","getCountryIsoCode","newCountry","sort","a","b","find","propagateChange","intlNo","phoneUtil","format","separateDialCode","removeDialCode","internationalNumber","nationalNumber","e164Number","toUpperCase","countryPlaceholder","replace","phoneMask","markForCheck","focus","event","allowedChars","allowedCtrlChars","allowedOtherKeys","test","key","ctrlKey","preventDefault","fn","onTouched","isDisabled","disabled","obj","setTimeout","onPhoneNumberChange","placeholder","customPlaceholder","parse","cntryCd","separateDialCodeClass","numberFormat","substr","rawNumber","toString","countries","mainCountry","secondaryCountries","matchedCountry","forEach","areaCode","getExampleNumber","toLocaleLowerCase","enablePlaceholder","getPhoneNumberPlaceHolder","push","preferredCountry","selectedCountryISO","viewQuery","_data_country_code__WEBPACK_IMPORTED_MODULE_0__","provide","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","useExisting","multi","useValue","_ngx_intl_tel_input_validator__WEBPACK_IMPORTED_MODULE_2__","decls","vars","consts","template","ctx","dropdownModuleForRoot","ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_3__","NgxIntlTelInputModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ngx_mask_ngx_mask_module__WEBPACK_IMPORTED_MODULE_2__","declarations","_ngx_intl_tel_input_component__WEBPACK_IMPORTED_MODULE_1__","_directives_native_element_injector_directive__WEBPACK_IMPORTED_MODULE_0__","imports","exports","phoneNumberValidator","inputBox","id","isCheckValidation","getAttribute","isRequired","errors","required","error","validatePhoneNumber","valid","setCustomValidity","google_libphonenumber__WEBPACK_IMPORTED_MODULE_0__","isValidNumberForRegion","clearValidators","config","NEW_CONFIG","INITIAL_CONFIG","initialConfig","sufix","prefix","clearIfNotMatch","showTemplate","showMaskTyped","dropSpecialCharacters","specialCharacters","patterns","pattern","RegExp","optional","MaskApplierService","_config","str","x","split","res","rgx","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","inputValue","maskAndPattern","mask","customPattern","applyMask","maskExpression","position","cb","cursor","result","slice","inputArray","match","substring","strForSep","separator","shiftStep","add","i","inputSymbol","_checkSymbolMask","Number","_findSpecialChar","shift","newPosition","has","symbol","val","maskSymbol","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_0__","MaskDirective","document","_maskService","_maskValue","_repeatPatternSymbols","formElementProperty","_inputValue","Array","isArray","target","onChange","selectionStart","caretShift","applyValueChanges","activeElement","selectionEnd","_position","inputType","clearIfNotMatchFn","onTouch","keyCode","maskIsShown","onFocus","onInput","MAX_SAFE_INTEGER","String","isNumberValue","maskExp","reduce","accum","currval","index","_start","_end","repeatNumber","repaceWith","join","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","hostBindings","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_mask_service__WEBPACK_IMPORTED_MODULE_0__","MaskPipe","applyMaskWithPattern","pure","MaskService","_elementRef","_renderer","_formElement","_removeMask","_removeSufix","_removePrefix","ifMaskIsShown","resLen","prefNmask","maskedInput","setProperty","specialCharactersForRemove","_regExpForRemove","map","item","_mask_applier_service__WEBPACK_IMPORTED_MODULE_1__","NgxMaskModule","configValue","ngModule","providers","useFactory","_configFactory","deps","_mask_directive__WEBPACK_IMPORTED_MODULE_2__","_mask_pipe__WEBPACK_IMPORTED_MODULE_3__","initConfig","Object","AppComponent","projects_ngx_intl_tel_input_src_lib_enums_search_country_field_enum__WEBPACK_IMPORTED_MODULE_1__","projects_ngx_intl_tel_input_src_lib_enums_country_iso_enum__WEBPACK_IMPORTED_MODULE_0__","projects_ngx_intl_tel_input_src_public_api__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","phone","_r0","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","projects_ngx_intl_tel_input_src_lib_ngx_intl_tel_input_module__WEBPACK_IMPORTED_MODULE_0__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///projects/ngx-intl-tel-input/src/lib/data/country-code.ts","webpack:///projects/ngx-intl-tel-input/src/lib/directives/native-element-injector.directive.ts","webpack:///projects/ngx-intl-tel-input/src/lib/enums/country-iso.enum.ts","webpack:///projects/ngx-intl-tel-input/src/lib/enums/phone-number-format.enum.ts","webpack:///projects/ngx-intl-tel-input/src/lib/enums/search-country-field.enum.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.html","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.module.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.validator.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-mask/config.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-mask/mask-applier.service.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-mask/mask.directive.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-mask/mask.pipe.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-mask/mask.service.ts","webpack:///projects/ngx-intl-tel-input/src/lib/ngx-mask/ngx-mask.module.ts","webpack:///projects/ngx-intl-tel-input/src/public_api.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Injectable } from \"@angular/core\";\nimport { CountryISO } from '../enums/country-iso.enum';\n\n@Injectable()\nexport class CountryCode {\n\tpublic allCountries = [\n\t\t[\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\n\t\t\tCountryISO.Afghanistan,\n\t\t\t'93'\n\t\t],\n\t\t[\n\t\t\t'Albania (Shqipëri)',\n\t\t\tCountryISO.Albania,\n\t\t\t'355'\n\t\t],\n\t\t[\n\t\t\t'Algeria (‫الجزائر‬‎)',\n\t\t\tCountryISO.Algeria,\n\t\t\t'213'\n\t\t],\n\t\t[\n\t\t\t'American Samoa',\n\t\t\t'as',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'684',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Andorra',\n\t\t\tCountryISO.Andorra,\n\t\t\t'376'\n\t\t],\n\t\t[\n\t\t\t'Angola',\n\t\t\tCountryISO.Angola,\n\t\t\t'244'\n\t\t],\n\t\t[\n\t\t\t'Anguilla',\n\t\t\t'ai',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'264',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Antigua and Barbuda',\n\t\t\t'ag',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'268',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Argentina',\n\t\t\tCountryISO.Argentina,\n\t\t\t'54'\n\t\t],\n\t\t[\n\t\t\t'Armenia (Հայաստան)',\n\t\t\tCountryISO.Armenia,\n\t\t\t'374'\n\t\t],\n\t\t[\n\t\t\t'Aruba',\n\t\t\tCountryISO.Aruba,\n\t\t\t'297'\n\t\t],\n\t\t[\n\t\t\t'Australia',\n\t\t\tCountryISO.Australia,\n\t\t\t'61',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Austria (Österreich)',\n\t\t\tCountryISO.Austria,\n\t\t\t'43'\n\t\t],\n\t\t[\n\t\t\t'Azerbaijan (Azərbaycan)',\n\t\t\tCountryISO.Azerbaijan,\n\t\t\t'994'\n\t\t],\n\t\t[\n\t\t\t'Bahamas',\n\t\t\t'bs',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'242',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bahrain (‫البحرين‬‎)',\n\t\t\tCountryISO.Bahrain,\n\t\t\t'973'\n\t\t],\n\t\t[\n\t\t\t'Bangladesh (বাংলাদেশ)',\n\t\t\tCountryISO.Bangladesh,\n\t\t\t'880'\n\t\t],\n\t\t[\n\t\t\t'Barbados',\n\t\t\t'bb',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'246',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Belarus (Беларусь)',\n\t\t\tCountryISO.Belarus,\n\t\t\t'375'\n\t\t],\n\t\t[\n\t\t\t'Belgium (België)',\n\t\t\tCountryISO.Belgium,\n\t\t\t'32'\n\t\t],\n\t\t[\n\t\t\t'Belize',\n\t\t\tCountryISO.Belize,\n\t\t\t'501'\n\t\t],\n\t\t[\n\t\t\t'Benin (Bénin)',\n\t\t\tCountryISO.Benin,\n\t\t\t'229'\n\t\t],\n\t\t[\n\t\t\t'Bermuda',\n\t\t\t'bm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'441',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bhutan (འབྲུག)',\n\t\t\tCountryISO.Bhutan,\n\t\t\t'975'\n\t\t],\n\t\t[\n\t\t\t'Bolivia',\n\t\t\tCountryISO.Bolivia,\n\t\t\t'591'\n\t\t],\n\t\t[\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\n\t\t\tCountryISO.BosniaAndHerzegovina,\n\t\t\t'387'\n\t\t],\n\t\t[\n\t\t\t'Botswana',\n\t\t\tCountryISO.Botswana,\n\t\t\t'267'\n\t\t],\n\t\t[\n\t\t\t'Brazil (Brasil)',\n\t\t\tCountryISO.Brazil,\n\t\t\t'55'\n\t\t],\n\t\t[\n\t\t\t'British Indian Ocean Territory',\n\t\t\tCountryISO.BritishIndianOceanTerritory,\n\t\t\t'246'\n\t\t],\n\t\t[\n\t\t\t'British Virgin Islands',\n\t\t\t'vg',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'284',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Brunei',\n\t\t\tCountryISO.Brunei,\n\t\t\t'673'\n\t\t],\n\t\t[\n\t\t\t'Bulgaria (България)',\n\t\t\tCountryISO.Bulgaria,\n\t\t\t'359'\n\t\t],\n\t\t[\n\t\t\t'Burkina Faso',\n\t\t\tCountryISO.BurkinaFaso,\n\t\t\t'226'\n\t\t],\n\t\t[\n\t\t\t'Burundi (Uburundi)',\n\t\t\tCountryISO.Burundi,\n\t\t\t'257'\n\t\t],\n\t\t[\n\t\t\t'Cambodia (កម្ពុជា)',\n\t\t\tCountryISO.Cambodia,\n\t\t\t'855'\n\t\t],\n\t\t[\n\t\t\t'Cameroon (Cameroun)',\n\t\t\tCountryISO.Cameroon,\n\t\t\t'237'\n\t\t],\n\t\t[\n\t\t\t'Canada',\n\t\t\tCountryISO.Canada,\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n\t\t\t\t'819', '825', '867', '873', '902', '905'\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Cape Verde (Kabu Verdi)',\n\t\t\tCountryISO.CapeVerde,\n\t\t\t'238'\n\t\t],\n\t\t[\n\t\t\t'Caribbean Netherlands',\n\t\t\tCountryISO.CaribbeanNetherlands,\n\t\t\t'599',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Cayman Islands',\n\t\t\t'ky',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'345',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Central African Republic (République centrafricaine)',\n\t\t\tCountryISO.CentralAfricanRepublic,\n\t\t\t'236'\n\t\t],\n\t\t[\n\t\t\t'Chad (Tchad)',\n\t\t\tCountryISO.Chad,\n\t\t\t'235'\n\t\t],\n\t\t[\n\t\t\t'Chile',\n\t\t\tCountryISO.Chile,\n\t\t\t'56'\n\t\t],\n\t\t[\n\t\t\t'China (中国)',\n\t\t\tCountryISO.China,\n\t\t\t'86'\n\t\t],\n\t\t[\n\t\t\t'Christmas Island',\n\t\t\tCountryISO.ChristmasIsland,\n\t\t\t'61',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Cocos (Keeling) Islands',\n\t\t\tCountryISO.Cocos,\n\t\t\t'61',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Colombia',\n\t\t\tCountryISO.Colombia,\n\t\t\t'57'\n\t\t],\n\t\t[\n\t\t\t'Comoros (‫جزر القمر‬‎)',\n\t\t\tCountryISO.Comoros,\n\t\t\t'269'\n\t\t],\n\t\t[\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n\t\t\t'243'\n\t\t],\n\t\t[\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\n\t\t\t'242'\n\t\t],\n\t\t[\n\t\t\t'Cook Islands',\n\t\t\tCountryISO.CookIslands,\n\t\t\t'682'\n\t\t],\n\t\t[\n\t\t\t'Costa Rica',\n\t\t\tCountryISO.CostaRica,\n\t\t\t'506'\n\t\t],\n\t\t[\n\t\t\t'Côte d’Ivoire',\n\t\t\tCountryISO.CôteDIvoire,\n\t\t\t'225'\n\t\t],\n\t\t[\n\t\t\t'Croatia (Hrvatska)',\n\t\t\tCountryISO.Croatia,\n\t\t\t'385'\n\t\t],\n\t\t[\n\t\t\t'Cuba',\n\t\t\tCountryISO.Cuba,\n\t\t\t'53'\n\t\t],\n\t\t[\n\t\t\t'Curaçao',\n\t\t\tCountryISO.Curaçao,\n\t\t\t'599',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Cyprus (Κύπρος)',\n\t\t\tCountryISO.Cyprus,\n\t\t\t'357'\n\t\t],\n\t\t[\n\t\t\t'Czech Republic (Česká republika)',\n\t\t\tCountryISO.CzechRepublic,\n\t\t\t'420'\n\t\t],\n\t\t[\n\t\t\t'Denmark (Danmark)',\n\t\t\tCountryISO.Denmark,\n\t\t\t'45'\n\t\t],\n\t\t[\n\t\t\t'Djibouti',\n\t\t\tCountryISO.Djibouti,\n\t\t\t'253'\n\t\t],\n\t\t[\n\t\t\t'Dominica',\n\t\t\tCountryISO.Dominica,\n\t\t\t'1767'\n\t\t],\n\t\t[\n\t\t\t'Dominican Republic (República Dominicana)',\n\t\t\tCountryISO.DominicanRepublic,\n\t\t\t'1',\n\t\t\t2,\n\t\t\t['809', '829', '849']\n\t\t],\n\t\t[\n\t\t\t'Ecuador',\n\t\t\tCountryISO.Ecuador,\n\t\t\t'593'\n\t\t],\n\t\t[\n\t\t\t'Egypt (‫مصر‬‎)',\n\t\t\tCountryISO.Egypt,\n\t\t\t'20'\n\t\t],\n\t\t[\n\t\t\t'El Salvador',\n\t\t\tCountryISO.ElSalvador,\n\t\t\t'503'\n\t\t],\n\t\t[\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\n\t\t\tCountryISO.EquatorialGuinea,\n\t\t\t'240'\n\t\t],\n\t\t[\n\t\t\t'Eritrea',\n\t\t\tCountryISO.Eritrea,\n\t\t\t'291'\n\t\t],\n\t\t[\n\t\t\t'Estonia (Eesti)',\n\t\t\tCountryISO.Estonia,\n\t\t\t'372'\n\t\t],\n\t\t[\n\t\t\t'Ethiopia',\n\t\t\tCountryISO.Ethiopia,\n\t\t\t'251'\n\t\t],\n\t\t[\n\t\t\t'Falkland Islands (Islas Malvinas)',\n\t\t\tCountryISO.FalklandIslands,\n\t\t\t'500'\n\t\t],\n\t\t[\n\t\t\t'Faroe Islands (Føroyar)',\n\t\t\tCountryISO.FaroeIslands,\n\t\t\t'298'\n\t\t],\n\t\t[\n\t\t\t'Fiji',\n\t\t\tCountryISO.Fiji,\n\t\t\t'679'\n\t\t],\n\t\t[\n\t\t\t'Finland (Suomi)',\n\t\t\tCountryISO.Finland,\n\t\t\t'358',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'France',\n\t\t\tCountryISO.France,\n\t\t\t'33'\n\t\t],\n\t\t[\n\t\t\t'French Guiana (Guyane française)',\n\t\t\tCountryISO.FrenchGuiana,\n\t\t\t'594'\n\t\t],\n\t\t[\n\t\t\t'French Polynesia (Polynésie française)',\n\t\t\tCountryISO.FrenchPolynesia,\n\t\t\t'689'\n\t\t],\n\t\t[\n\t\t\t'Gabon',\n\t\t\tCountryISO.Gabon,\n\t\t\t'241'\n\t\t],\n\t\t[\n\t\t\t'Gambia',\n\t\t\tCountryISO.Gambia,\n\t\t\t'220'\n\t\t],\n\t\t[\n\t\t\t'Georgia (საქართველო)',\n\t\t\tCountryISO.Georgia,\n\t\t\t'995'\n\t\t],\n\t\t[\n\t\t\t'Germany (Deutschland)',\n\t\t\tCountryISO.Germany,\n\t\t\t'49'\n\t\t],\n\t\t[\n\t\t\t'Ghana (Gaana)',\n\t\t\tCountryISO.Ghana,\n\t\t\t'233'\n\t\t],\n\t\t[\n\t\t\t'Gibraltar',\n\t\t\tCountryISO.Gibraltar,\n\t\t\t'350'\n\t\t],\n\t\t[\n\t\t\t'Greece (Ελλάδα)',\n\t\t\tCountryISO.Greece,\n\t\t\t'30'\n\t\t],\n\t\t[\n\t\t\t'Greenland (Kalaallit Nunaat)',\n\t\t\tCountryISO.Greenland,\n\t\t\t'299'\n\t\t],\n\t\t[\n\t\t\t'Grenada',\n\t\t\tCountryISO.Grenada,\n\t\t\t'1473'\n\t\t],\n\t\t[\n\t\t\t'Guadeloupe',\n\t\t\tCountryISO.Guadeloupe,\n\t\t\t'590',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Guam',\n\t\t\t'gu',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'671',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Guatemala',\n\t\t\tCountryISO.Guatemala,\n\t\t\t'502'\n\t\t],\n\t\t[\n\t\t\t'Guernsey',\n\t\t\tCountryISO.Guernsey,\n\t\t\t'44',\n\t\t\t1,\n\t\t\t[1481]\n\t\t],\n\t\t[\n\t\t\t'Guinea (Guinée)',\n\t\t\tCountryISO.Guinea,\n\t\t\t'224'\n\t\t],\n\t\t[\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\n\t\t\tCountryISO.GuineaBissau,\n\t\t\t'245'\n\t\t],\n\t\t[\n\t\t\t'Guyana',\n\t\t\tCountryISO.Guyana,\n\t\t\t'592'\n\t\t],\n\t\t[\n\t\t\t'Haiti',\n\t\t\tCountryISO.Haiti,\n\t\t\t'509'\n\t\t],\n\t\t[\n\t\t\t'Honduras',\n\t\t\tCountryISO.Honduras,\n\t\t\t'504'\n\t\t],\n\t\t[\n\t\t\t'Hong Kong (香港)',\n\t\t\tCountryISO.HongKong,\n\t\t\t'852'\n\t\t],\n\t\t[\n\t\t\t'Hungary (Magyarország)',\n\t\t\tCountryISO.Hungary,\n\t\t\t'36'\n\t\t],\n\t\t[\n\t\t\t'Iceland (Ísland)',\n\t\t\tCountryISO.Iceland,\n\t\t\t'354'\n\t\t],\n\t\t[\n\t\t\t'India (भारत)',\n\t\t\tCountryISO.India,\n\t\t\t'91'\n\t\t],\n\t\t[\n\t\t\t'Indonesia',\n\t\t\tCountryISO.Indonesia,\n\t\t\t'62'\n\t\t],\n\t\t[\n\t\t\t'Iran (‫ایران‬‎)',\n\t\t\tCountryISO.Iran,\n\t\t\t'98'\n\t\t],\n\t\t[\n\t\t\t'Iraq (‫العراق‬‎)',\n\t\t\tCountryISO.Iraq,\n\t\t\t'964'\n\t\t],\n\t\t[\n\t\t\t'Ireland',\n\t\t\tCountryISO.Ireland,\n\t\t\t'353'\n\t\t],\n\t\t[\n\t\t\t'Isle of Man',\n\t\t\tCountryISO.IsleOfMan,\n\t\t\t'44',\n\t\t\t2,\n\t\t\t[1624]\n\t\t],\n\t\t[\n\t\t\t'Israel (‫ישראל‬‎)',\n\t\t\tCountryISO.Israel,\n\t\t\t'972'\n\t\t],\n\t\t[\n\t\t\t'Italy (Italia)',\n\t\t\tCountryISO.Italy,\n\t\t\t'39',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Jamaica',\n\t\t\t'jm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'876',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Japan (日本)',\n\t\t\tCountryISO.Japan,\n\t\t\t'81'\n\t\t],\n\t\t[\n\t\t\t'Jersey',\n\t\t\tCountryISO.Jersey,\n\t\t\t'44',\n\t\t\t3,\n\t\t\t[1534]\n\t\t],\n\t\t[\n\t\t\t'Jordan (‫الأردن‬‎)',\n\t\t\tCountryISO.Jordan,\n\t\t\t'962'\n\t\t],\n\t\t[\n\t\t\t'Kazakhstan (Казахстан)',\n\t\t\tCountryISO.Kazakhstan,\n\t\t\t'7',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Kenya',\n\t\t\tCountryISO.Kenya,\n\t\t\t'254'\n\t\t],\n\t\t[\n\t\t\t'Kiribati',\n\t\t\tCountryISO.Kiribati,\n\t\t\t'686'\n\t\t],\n\t\t[\n\t\t\t'Kosovo',\n\t\t\tCountryISO.Kosovo,\n\t\t\t'383'\n\t\t],\n\t\t[\n\t\t\t'Kuwait (‫الكويت‬‎)',\n\t\t\tCountryISO.Kuwait,\n\t\t\t'965'\n\t\t],\n\t\t[\n\t\t\t'Kyrgyzstan (Кыргызстан)',\n\t\t\tCountryISO.Kyrgyzstan,\n\t\t\t'996'\n\t\t],\n\t\t[\n\t\t\t'Laos (ລາວ)',\n\t\t\tCountryISO.Laos,\n\t\t\t'856'\n\t\t],\n\t\t[\n\t\t\t'Latvia (Latvija)',\n\t\t\tCountryISO.Latvia,\n\t\t\t'371'\n\t\t],\n\t\t[\n\t\t\t'Lebanon (‫لبنان‬‎)',\n\t\t\tCountryISO.Lebanon,\n\t\t\t'961'\n\t\t],\n\t\t[\n\t\t\t'Lesotho',\n\t\t\tCountryISO.Lesotho,\n\t\t\t'266'\n\t\t],\n\t\t[\n\t\t\t'Liberia',\n\t\t\tCountryISO.Liberia,\n\t\t\t'231'\n\t\t],\n\t\t[\n\t\t\t'Libya (‫ليبيا‬‎)',\n\t\t\tCountryISO.Libya,\n\t\t\t'218'\n\t\t],\n\t\t[\n\t\t\t'Liechtenstein',\n\t\t\tCountryISO.Liechtenstein,\n\t\t\t'423'\n\t\t],\n\t\t[\n\t\t\t'Lithuania (Lietuva)',\n\t\t\tCountryISO.Lithuania,\n\t\t\t'370'\n\t\t],\n\t\t[\n\t\t\t'Luxembourg',\n\t\t\tCountryISO.Luxembourg,\n\t\t\t'352'\n\t\t],\n\t\t[\n\t\t\t'Macau (澳門)',\n\t\t\tCountryISO.Macau,\n\t\t\t'853'\n\t\t],\n\t\t[\n\t\t\t'Macedonia (FYROM) (Македонија)',\n\t\t\tCountryISO.Macedonia,\n\t\t\t'389'\n\t\t],\n\t\t[\n\t\t\t'Madagascar (Madagasikara)',\n\t\t\tCountryISO.Madagascar,\n\t\t\t'261'\n\t\t],\n\t\t[\n\t\t\t'Malawi',\n\t\t\tCountryISO.Malawi,\n\t\t\t'265'\n\t\t],\n\t\t[\n\t\t\t'Malaysia',\n\t\t\tCountryISO.Malaysia,\n\t\t\t'60'\n\t\t],\n\t\t[\n\t\t\t'Maldives',\n\t\t\tCountryISO.Maldives,\n\t\t\t'960'\n\t\t],\n\t\t[\n\t\t\t'Mali',\n\t\t\tCountryISO.Mali,\n\t\t\t'223'\n\t\t],\n\t\t[\n\t\t\t'Malta',\n\t\t\tCountryISO.Malta,\n\t\t\t'356'\n\t\t],\n\t\t[\n\t\t\t'Marshall Islands',\n\t\t\tCountryISO.MarshallIslands,\n\t\t\t'692'\n\t\t],\n\t\t[\n\t\t\t'Martinique',\n\t\t\tCountryISO.Martinique,\n\t\t\t'596'\n\t\t],\n\t\t[\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\n\t\t\tCountryISO.Mauritania,\n\t\t\t'222'\n\t\t],\n\t\t[\n\t\t\t'Mauritius (Moris)',\n\t\t\tCountryISO.Mauritius,\n\t\t\t'230'\n\t\t],\n\t\t[\n\t\t\t'Mayotte',\n\t\t\tCountryISO.Mayotte,\n\t\t\t'262',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Mexico (México)',\n\t\t\tCountryISO.Mexico,\n\t\t\t'52'\n\t\t],\n\t\t[\n\t\t\t'Micronesia',\n\t\t\tCountryISO.Micronesia,\n\t\t\t'691'\n\t\t],\n\t\t[\n\t\t\t'Moldova (Republica Moldova)',\n\t\t\tCountryISO.Moldova,\n\t\t\t'373'\n\t\t],\n\t\t[\n\t\t\t'Monaco',\n\t\t\tCountryISO.Monaco,\n\t\t\t'377'\n\t\t],\n\t\t[\n\t\t\t'Mongolia (Монгол)',\n\t\t\tCountryISO.Mongolia,\n\t\t\t'976'\n\t\t],\n\t\t[\n\t\t\t'Montenegro (Crna Gora)',\n\t\t\tCountryISO.Montenegro,\n\t\t\t'382'\n\t\t],\n\t\t[\n\t\t\t'Montserrat',\n\t\t\t'ms',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'664',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Morocco (‫المغرب‬‎)',\n\t\t\tCountryISO.Morocco,\n\t\t\t'212',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Mozambique (Moçambique)',\n\t\t\tCountryISO.Mozambique,\n\t\t\t'258'\n\t\t],\n\t\t[\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\n\t\t\tCountryISO.Myanmar,\n\t\t\t'95'\n\t\t],\n\t\t[\n\t\t\t'Namibia (Namibië)',\n\t\t\tCountryISO.Namibia,\n\t\t\t'264'\n\t\t],\n\t\t[\n\t\t\t'Nauru',\n\t\t\tCountryISO.Nauru,\n\t\t\t'674'\n\t\t],\n\t\t[\n\t\t\t'Nepal (नेपाल)',\n\t\t\tCountryISO.Nepal,\n\t\t\t'977'\n\t\t],\n\t\t[\n\t\t\t'Netherlands (Nederland)',\n\t\t\tCountryISO.Netherlands,\n\t\t\t'31'\n\t\t],\n\t\t[\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\n\t\t\tCountryISO.NewCaledonia,\n\t\t\t'687'\n\t\t],\n\t\t[\n\t\t\t'New Zealand',\n\t\t\tCountryISO.NewZealand,\n\t\t\t'64'\n\t\t],\n\t\t[\n\t\t\t'Nicaragua',\n\t\t\tCountryISO.Nicaragua,\n\t\t\t'505'\n\t\t],\n\t\t[\n\t\t\t'Niger (Nijar)',\n\t\t\tCountryISO.Niger,\n\t\t\t'227'\n\t\t],\n\t\t[\n\t\t\t'Nigeria',\n\t\t\tCountryISO.Nigeria,\n\t\t\t'234'\n\t\t],\n\t\t[\n\t\t\t'Niue',\n\t\t\tCountryISO.Niue,\n\t\t\t'683'\n\t\t],\n\t\t[\n\t\t\t'Norfolk Island',\n\t\t\tCountryISO.NorfolkIsland,\n\t\t\t'672'\n\t\t],\n\t\t[\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\n\t\t\tCountryISO.NorthKorea,\n\t\t\t'850'\n\t\t],\n\t\t[\n\t\t\t'Northern Mariana Islands',\n\t\t\tCountryISO.NorthernMarianaIslands,\n\t\t\t'1670'\n\t\t],\n\t\t[\n\t\t\t'Norway (Norge)',\n\t\t\tCountryISO.Norway,\n\t\t\t'47',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Oman (‫عُمان‬‎)',\n\t\t\tCountryISO.Oman,\n\t\t\t'968'\n\t\t],\n\t\t[\n\t\t\t'Pakistan (‫پاکستان‬‎)',\n\t\t\tCountryISO.Pakistan,\n\t\t\t'92'\n\t\t],\n\t\t[\n\t\t\t'Palau',\n\t\t\tCountryISO.Palau,\n\t\t\t'680'\n\t\t],\n\t\t[\n\t\t\t'Palestine (‫فلسطين‬‎)',\n\t\t\tCountryISO.Palestine,\n\t\t\t'970'\n\t\t],\n\t\t[\n\t\t\t'Panama (Panamá)',\n\t\t\tCountryISO.Panama,\n\t\t\t'507'\n\t\t],\n\t\t[\n\t\t\t'Papua New Guinea',\n\t\t\tCountryISO.PapuaNewGuinea,\n\t\t\t'675'\n\t\t],\n\t\t[\n\t\t\t'Paraguay',\n\t\t\tCountryISO.Paraguay,\n\t\t\t'595'\n\t\t],\n\t\t[\n\t\t\t'Peru (Perú)',\n\t\t\tCountryISO.Peru,\n\t\t\t'51'\n\t\t],\n\t\t[\n\t\t\t'Philippines',\n\t\t\tCountryISO.Philippines,\n\t\t\t'63'\n\t\t],\n\t\t[\n\t\t\t'Poland (Polska)',\n\t\t\tCountryISO.Poland,\n\t\t\t'48'\n\t\t],\n\t\t[\n\t\t\t'Portugal',\n\t\t\tCountryISO.Portugal,\n\t\t\t'351'\n\t\t],\n\t\t[\n\t\t\t'Puerto Rico',\n\t\t\tCountryISO.PuertoRico,\n\t\t\t'1',\n\t\t\t3,\n\t\t\t['787', '939']\n\t\t],\n\t\t[\n\t\t\t'Qatar (‫قطر‬‎)',\n\t\t\tCountryISO.Qatar,\n\t\t\t'974'\n\t\t],\n\t\t[\n\t\t\t'Réunion (La Réunion)',\n\t\t\tCountryISO.Réunion,\n\t\t\t'262',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Romania (România)',\n\t\t\tCountryISO.Romania,\n\t\t\t'40'\n\t\t],\n\t\t[\n\t\t\t'Russia (Россия)',\n\t\t\tCountryISO.Russia,\n\t\t\t'7',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Rwanda',\n\t\t\tCountryISO.Rwanda,\n\t\t\t'250'\n\t\t],\n\t\t[\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\n\t\t\tCountryISO.SaintBarthélemy,\n\t\t\t'590',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Saint Helena',\n\t\t\tCountryISO.SaintHelena,\n\t\t\t'290'\n\t\t],\n\t\t[\n\t\t\t'Saint Kitts and Nevis',\n\t\t\tCountryISO.SaintKittsAndNevis,\n\t\t\t'1869'\n\t\t],\n\t\t[\n\t\t\t'Saint Lucia',\n\t\t\t'lc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'758',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\n\t\t\tCountryISO.SaintMartin,\n\t\t\t'590',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n\t\t\tCountryISO.SaintPierreAndMiquelon,\n\t\t\t'508'\n\t\t],\n\t\t[\n\t\t\t'Saint Vincent and the Grenadines',\n\t\t\t'vc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'784',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Samoa',\n\t\t\tCountryISO.Samoa,\n\t\t\t'685'\n\t\t],\n\t\t[\n\t\t\t'San Marino',\n\t\t\tCountryISO.SanMarino,\n\t\t\t'378'\n\t\t],\n\t\t[\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\n\t\t\tCountryISO.SãoToméAndPríncipe,\n\t\t\t'239'\n\t\t],\n\t\t[\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n\t\t\tCountryISO.SaudiArabia,\n\t\t\t'966'\n\t\t],\n\t\t[\n\t\t\t'Senegal (Sénégal)',\n\t\t\tCountryISO.Senegal,\n\t\t\t'221'\n\t\t],\n\t\t[\n\t\t\t'Serbia (Србија)',\n\t\t\tCountryISO.Serbia,\n\t\t\t'381'\n\t\t],\n\t\t[\n\t\t\t'Seychelles',\n\t\t\tCountryISO.Seychelles,\n\t\t\t'248'\n\t\t],\n\t\t[\n\t\t\t'Sierra Leone',\n\t\t\tCountryISO.SierraLeone,\n\t\t\t'232'\n\t\t],\n\t\t[\n\t\t\t'Singapore',\n\t\t\tCountryISO.Singapore,\n\t\t\t'65'\n\t\t],\n\t\t[\n\t\t\t'Sint Maarten',\n\t\t\t'sx',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'721',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Slovakia (Slovensko)',\n\t\t\tCountryISO.Slovakia,\n\t\t\t'421'\n\t\t],\n\t\t[\n\t\t\t'Slovenia (Slovenija)',\n\t\t\tCountryISO.Slovenia,\n\t\t\t'386'\n\t\t],\n\t\t[\n\t\t\t'Solomon Islands',\n\t\t\tCountryISO.SolomonIslands,\n\t\t\t'677'\n\t\t],\n\t\t[\n\t\t\t'Somalia (Soomaaliya)',\n\t\t\tCountryISO.Somalia,\n\t\t\t'252'\n\t\t],\n\t\t[\n\t\t\t'South Africa',\n\t\t\tCountryISO.SouthAfrica,\n\t\t\t'27'\n\t\t],\n\t\t[\n\t\t\t'South Korea (대한민국)',\n\t\t\tCountryISO.SouthKorea,\n\t\t\t'82'\n\t\t],\n\t\t[\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\n\t\t\tCountryISO.SouthSudan,\n\t\t\t'211'\n\t\t],\n\t\t[\n\t\t\t'Spain (España)',\n\t\t\tCountryISO.Spain,\n\t\t\t'34'\n\t\t],\n\t\t[\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\n\t\t\tCountryISO.SriLanka,\n\t\t\t'94'\n\t\t],\n\t\t[\n\t\t\t'Sudan (‫السودان‬‎)',\n\t\t\tCountryISO.Sudan,\n\t\t\t'249'\n\t\t],\n\t\t[\n\t\t\t'Suriname',\n\t\t\tCountryISO.Suriname,\n\t\t\t'597'\n\t\t],\n\t\t[\n\t\t\t'Svalbard and Jan Mayen',\n\t\t\tCountryISO.SvalbardAndJanMayen,\n\t\t\t'47',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Swaziland',\n\t\t\tCountryISO.Swaziland,\n\t\t\t'268'\n\t\t],\n\t\t[\n\t\t\t'Sweden (Sverige)',\n\t\t\tCountryISO.Sweden,\n\t\t\t'46'\n\t\t],\n\t\t[\n\t\t\t'Switzerland (Schweiz)',\n\t\t\tCountryISO.Switzerland,\n\t\t\t'41'\n\t\t],\n\t\t[\n\t\t\t'Syria (‫سوريا‬‎)',\n\t\t\tCountryISO.Syria,\n\t\t\t'963'\n\t\t],\n\t\t[\n\t\t\t'Taiwan (台灣)',\n\t\t\tCountryISO.Taiwan,\n\t\t\t'886'\n\t\t],\n\t\t[\n\t\t\t'Tajikistan',\n\t\t\tCountryISO.Tajikistan,\n\t\t\t'992'\n\t\t],\n\t\t[\n\t\t\t'Tanzania',\n\t\t\tCountryISO.Tanzania,\n\t\t\t'255'\n\t\t],\n\t\t[\n\t\t\t'Thailand (ไทย)',\n\t\t\tCountryISO.Thailand,\n\t\t\t'66'\n\t\t],\n\t\t[\n\t\t\t'Timor-Leste',\n\t\t\tCountryISO.TimorLeste,\n\t\t\t'670'\n\t\t],\n\t\t[\n\t\t\t'Togo',\n\t\t\tCountryISO.Togo,\n\t\t\t'228'\n\t\t],\n\t\t[\n\t\t\t'Tokelau',\n\t\t\tCountryISO.Tokelau,\n\t\t\t'690'\n\t\t],\n\t\t[\n\t\t\t'Tonga',\n\t\t\tCountryISO.Tonga,\n\t\t\t'676'\n\t\t],\n\t\t[\n\t\t\t'Trinidad and Tobago',\n\t\t\t'tt',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'868',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Tunisia (‫تونس‬‎)',\n\t\t\tCountryISO.Tunisia,\n\t\t\t'216'\n\t\t],\n\t\t[\n\t\t\t'Turkey (Türkiye)',\n\t\t\tCountryISO.Turkey,\n\t\t\t'90'\n\t\t],\n\t\t[\n\t\t\t'Turkmenistan',\n\t\t\tCountryISO.Turkmenistan,\n\t\t\t'993'\n\t\t],\n\t\t[\n\t\t\t'Turks and Caicos Islands',\n\t\t\tCountryISO.TurksAndCaicosIslands,\n\t\t\t'1649'\n\t\t],\n\t\t[\n\t\t\t'Tuvalu',\n\t\t\tCountryISO.Tuvalu,\n\t\t\t'688'\n\t\t],\n\t\t[\n\t\t\t'U.S. Virgin Islands',\n\t\t\t'vi',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'340',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Uganda',\n\t\t\tCountryISO.Uganda,\n\t\t\t'256'\n\t\t],\n\t\t[\n\t\t\t'Ukraine (Україна)',\n\t\t\tCountryISO.Ukraine,\n\t\t\t'380'\n\t\t],\n\t\t[\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n\t\t\tCountryISO.UnitedArabEmirates,\n\t\t\t'971'\n\t\t],\n\t\t[\n\t\t\t'United Kingdom',\n\t\t\tCountryISO.UnitedKingdom,\n\t\t\t'44',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'United States',\n\t\t\tCountryISO.UnitedStates,\n\t\t\t'1',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Uruguay',\n\t\t\tCountryISO.Uruguay,\n\t\t\t'598'\n\t\t],\n\t\t[\n\t\t\t'Uzbekistan (Oʻzbekiston)',\n\t\t\tCountryISO.Uzbekistan,\n\t\t\t'998'\n\t\t],\n\t\t[\n\t\t\t'Vanuatu',\n\t\t\tCountryISO.Vanuatu,\n\t\t\t'678'\n\t\t],\n\t\t[\n\t\t\t'Vatican City (Città del Vaticano)',\n\t\t\tCountryISO.VaticanCity,\n\t\t\t'39',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Venezuela',\n\t\t\tCountryISO.Venezuela,\n\t\t\t'58'\n\t\t],\n\t\t[\n\t\t\t'Vietnam (Việt Nam)',\n\t\t\tCountryISO.Vietnam,\n\t\t\t'84'\n\t\t],\n\t\t[\n\t\t\t'Wallis and Futuna',\n\t\t\tCountryISO.WallisAndFutuna,\n\t\t\t'681'\n\t\t],\n\t\t[\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\n\t\t\tCountryISO.WesternSahara,\n\t\t\t'212',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Yemen (‫اليمن‬‎)',\n\t\t\tCountryISO.Yemen,\n\t\t\t'967'\n\t\t],\n\t\t[\n\t\t\t'Zambia',\n\t\t\tCountryISO.Zambia,\n\t\t\t'260'\n\t\t],\n\t\t[\n\t\t\t'Zimbabwe',\n\t\t\tCountryISO.Zimbabwe,\n\t\t\t'263'\n\t\t],\n\t\t[\n\t\t\t'Åland Islands',\n\t\t\tCountryISO.ÅlandIslands,\n\t\t\t'358',\n\t\t\t1\n\t\t]\n\t];\n}","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\n@Directive({\n\t// tslint:disable-next-line: directive-selector\n\tselector: '[ngModel], [formControl], [formControlName]',\n})\nexport class NativeElementInjectorDirective implements OnInit {\n\tconstructor(\n\t\tprivate controlDir: NgControl,\n\t\tprivate host: ElementRef<HTMLFormElement>\n\t) {}\n\tngOnInit() {\n\t\tif (this.controlDir.control) {\n\t\t\tthis.controlDir.control['nativeElement'] = this.host.nativeElement;\n\t\t}\n\t}\n}\n","export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCôteDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraçao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRéunion = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthélemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSãoToméAndPríncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÅlandIslands = 'ax',\n}\n","export enum PhoneNumberFormat {\n\tInternational = 'INTERNATIONAL',\n\tNational = 'NATIONAL',\n}\n","export enum SearchCountryField {\n\tDialCode = 'dialCode',\n\tIso2 = 'iso2',\n\tName = 'name',\n\tAll = 'all'\n}\n","<div class=\"iti iti--allow-dropdown\"\n\t[ngClass]=\"separateDialCodeClass\">\n\t<div class=\"iti__flag-container\"\n\t\tdropdown\n\t\t[ngClass]=\"{'disabled': disabled}\"\n\t\t[isDisabled]=\"disabled\">\n\t\t<div class=\"iti__selected-flag dropdown-toggle\"\n\t\t\tdropdownToggle>\n\t\t\t<div class=\"iti__flag\"\n\t\t\t\t[ngClass]=\"selectedCountry?.flagClass\"></div>\n\t\t\t<div *ngIf=\"separateDialCode\"\n\t\t\t\tclass=\"selected-dial-code\">+{{selectedCountry.dialCode}}</div>\n\t\t\t<div class=\"iti__arrow\"></div>\n\t\t</div>\n\t\t<div *dropdownMenu\n\t\t\tclass=\"dropdown-menu country-dropdown\">\n\t\t\t<div class=\"search-container\"\n\t\t\t\t*ngIf=\"searchCountryFlag && searchCountryField\">\n\t\t\t\t<input id=\"country-search-box\"\n\t\t\t\t\t[(ngModel)]=\"countrySearchText\"\n\t\t\t\t\t(keyup)=\"searchCountry()\"\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\n\t\t\t\t\t[placeholder]=\"searchCountryPlaceholder\"\n\t\t\t\t\tautofocus>\n\t\t\t</div>\n\t\t\t<ul class=\"iti__country-list\"\n\t\t\t\t#countryList>\n\t\t\t\t<li class=\"iti__country iti__preferred\"\n\t\t\t\t\t*ngFor=\"let country of preferredCountriesInDropDown\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId+'-preferred'\">\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\"\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"iti__divider\"\n\t\t\t\t\t*ngIf=\"preferredCountriesInDropDown?.length\"></li>\n\t\t\t\t<li class=\"iti__country iti__standard\"\n\t\t\t\t\t*ngFor=\"let country of allCountries\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId\">\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\"\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<input type=\"tel\"\n\t\t\t\t [mask]=\"phoneMask\"\n\t\t[id]=\"inputId\"\n\t\tautocomplete=\"off\"\n\t\t[ngClass]=\"cssClass\"\n\t\t(blur)=\"onTouched()\"\n\t\t(keypress)=\"onInputKeyPress($event)\"\n\t\t[(ngModel)]=\"phoneNumber\"\n\t\t(ngModelChange)=\"onPhoneNumberChange()\"\n\t\t[disabled]=\"disabled\"\n\t\t[placeholder]=\"resolvePlaceholder()\"\n\t\t[attr.maxLength]=\"maxLength\"\n\t\t[attr.validation]=\"phoneValidation\"\n\t\t#focusable>\n</div>\n","import * as lpn from 'google-libphonenumber';\n\nimport {\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tViewChild,\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { setTheme } from 'ngx-bootstrap/utils';\n\nimport { CountryCode } from './data/country-code';\nimport { CountryISO } from './enums/country-iso.enum';\nimport { SearchCountryField } from './enums/search-country-field.enum';\nimport type { ChangeData } from './interfaces/change-data';\nimport type { Country } from './model/country.model';\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\nimport { PhoneNumberFormat } from './enums/phone-number-format.enum';\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: 'ngx-intl-tel-input',\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\n\tstyleUrls: ['./bootstrap-dropdown.css', './ngx-intl-tel-input.component.css'],\n\tproviders: [\n\t\tCountryCode,\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\t// tslint:disable-next-line:no-forward-ref\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\n\t\t\tmulti: true,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseValue: phoneNumberValidator,\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\n\t@Input() value = '';\n\t@Input() preferredCountries: Array<string> = [];\n\t@Input() enablePlaceholder = true;\n\t@Input() customPlaceholder: string;\n\t@Input() numberFormat: PhoneNumberFormat = PhoneNumberFormat.International;\n\t@Input() cssClass = 'form-control';\n\t@Input() onlyCountries: Array<string> = [];\n\t@Input() enableAutoCountrySelect = true;\n\t@Input() searchCountryFlag = false;\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\n\t@Input() searchCountryPlaceholder = 'Search Country';\n\t@Input() maxLength = '';\n\t@Input() selectFirstCountry = true;\n\t@Input() selectedCountryISO: CountryISO;\n\t@Input() phoneValidation = true;\n\t@Input() inputId = 'phone';\n\t@Input() separateDialCode = false;\n\t@Input() defaultPhoneMask = '00 00 00 00';\n\tseparateDialCodeClass: string;\n\n\t@Output() readonly countryChange = new EventEmitter<Country>();\n\n\tselectedCountry: Country = {\n\t\tareaCodes: undefined,\n\t\tdialCode: '',\n\t\thtmlId: '',\n\t\tflagClass: '',\n\t\tiso2: '',\n\t\tname: '',\n\t\tplaceHolder: '',\n\t\tpriority: 0,\n\t};\n\n\tphoneNumber = '';\n\tallCountries: Array<Country> = [];\n\tpreferredCountriesInDropDown: Array<Country> = [];\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\n\tdisabled = false;\n\terrors: Array<any> = ['Phone number is required.'];\n\tcountrySearchText = '';\n\tpublic phoneMask = this.defaultPhoneMask;\n\n\t@ViewChild('countryList') countryList: ElementRef;\n\n\tonTouched = () => {};\n\tpropagateChange = (_: ChangeData) => {};\n\n\tconstructor(private countryCodeData: CountryCode, private cdr: ChangeDetectorRef) {\n\t\t// If this is not set, ngx-bootstrap will try to use the bs3 CSS (which is not what we've embedded) and will\n\t\t// Add the wrong classes and such\n\t\tsetTheme('bs4');\n\t}\n\n\tngOnInit() {\n\t\tthis.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst selectedISO = changes['selectedCountryISO'];\n\t\tif (\n\t\t\tthis.allCountries &&\n\t\t\tselectedISO &&\n\t\t\tselectedISO.currentValue !== selectedISO.previousValue\n\t\t) {\n\t\t\tthis.updateSelectedCountry();\n\t\t}\n\t\tif (changes.preferredCountries) {\n\t\t\tthis.updatePreferredCountries();\n\t\t}\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\t/*\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\n\t*/\n\tinit() {\n\t\tthis.fetchCountryData();\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.updatePreferredCountries();\n\t\t}\n\t\tif (this.onlyCountries.length) {\n\t\t\tthis.allCountries = this.allCountries.filter((c) =>\n\t\t\t\tthis.onlyCountries.includes(c.iso2)\n\t\t\t);\n\t\t}\n\t\tif (this.selectFirstCountry) {\n\t\t\tif (this.preferredCountriesInDropDown.length) {\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n\t\t\t} else {\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\n\t\t\t}\n\t\t}\n\t\tthis.updateSelectedCountry();\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tsetSelectedCountry(country: Country) {\n\t\tthis.selectedCountry = country;\n\t\tthis.countryChange.emit(country);\n\t}\n\n\t/**\n\t * Search country based on country name, iso2, dialCode or all of them.\n\t */\n\tpublic searchCountry() {\n\t\tif (!this.countrySearchText) {\n\t\t\tthis.countryList.nativeElement\n\t\t\t\t.querySelector('.iti__country-list li')\n\t\t\t\t.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\n\t\tconst country = this.allCountries.filter((c) => {\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n\t\t\t\t// Search in all fields\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Or search by specific SearchCountryField(s)\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (country.length > 0) {\n\t\t\tconst el = this.countryList.nativeElement.querySelector(\n\t\t\t\t'#' + country[0].htmlId\n\t\t\t);\n\t\t\tif (el) {\n\t\t\t\tel.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tpublic onPhoneNumberChange(): void {\n\t\tlet countryCode: string | undefined;\n\t\t// Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\n\t\tif (this.phoneNumber && typeof this.phoneNumber === 'object') {\n\t\t\tconst numberObj: ChangeData = this.phoneNumber;\n\t\t\tthis.phoneNumber = numberObj.number;\n\t\t\tcountryCode = numberObj.countryCode;\n\t\t}\n\n\t\tthis.value = this.phoneNumber;\n\t\tcountryCode = countryCode || this.selectedCountry.iso2;\n\t\tconst number = this.getParsedNumber(this.phoneNumber, countryCode);\n\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n\t\tif (this.enableAutoCountrySelect) {\n\t\t\tcountryCode =\n\t\t\t\tnumber && number.getCountryCode()\n\t\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\n\t\t\t\t\t: this.selectedCountry.iso2;\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\n\t\t\t\tconst newCountry = this.allCountries\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t\t})\n\t\t\t\t\t.find((c) => c.iso2 === countryCode);\n\t\t\t\tif (newCountry) {\n\t\t\t\t\tthis.selectedCountry = newCountry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (!this.value) {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t} else {\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onCountrySelect(country: Country, el): void {\n\t\tconst countryPlaceholder = country.placeHolder.replace(/[0-9]/g, '0');\n\t\tif(countryPlaceholder) {\n\t\t\tthis.phoneMask = countryPlaceholder;\n\t\t\tthis.cdr.markForCheck();\n\t\t}\n\t\tthis.setSelectedCountry(country);\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (this.phoneNumber && this.phoneNumber.length > 0) {\n\t\t\tthis.value = this.phoneNumber;\n\t\t\tconst number = this.getParsedNumber(\n\t\t\t\tthis.phoneNumber,\n\t\t\t\tthis.selectedCountry.iso2\n\t\t\t);\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t} else {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t}\n\n\t\tel.focus();\n\t}\n\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\n\t\tconst allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n\t\tconst allowedOtherKeys = [\n\t\t\t'ArrowLeft',\n\t\t\t'ArrowUp',\n\t\t\t'ArrowRight',\n\t\t\t'ArrowDown',\n\t\t\t'Home',\n\t\t\t'End',\n\t\t\t'Insert',\n\t\t\t'Delete',\n\t\t\t'Backspace',\n\t\t];\n\n\t\tif (\n\t\t\t!allowedChars.test(event.key) &&\n\t\t\t!(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\n\t\t\t!allowedOtherKeys.includes(event.key)\n\t\t) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\twriteValue(obj: any): void {\n\t\tif (obj === undefined) {\n\t\t\tthis.init();\n\t\t}\n\t\tthis.phoneNumber = obj;\n\t\tsetTimeout(() => {\n\t\t\tthis.onPhoneNumberChange();\n\t\t}, 1);\n\t}\n\n\tresolvePlaceholder(): string {\n\t\tlet placeholder = '';\n\t\tif (this.customPlaceholder) {\n\t\t\tplaceholder = this.customPlaceholder;\n\t\t} else if (this.selectedCountry.placeHolder) {\n\t\t\tplaceholder = this.selectedCountry.placeHolder;\n\t\t\tif (this.separateDialCode) {\n\t\t\t\tplaceholder = this.removeDialCode(placeholder);\n\t\t\t}\n\t\t}\n\t\treturn placeholder;\n\t}\n\n\t/* --------------------------------- Helpers -------------------------------- */\n\t/**\n\t * Returns parse PhoneNumber object.\n\t * @param phoneNumber string\n\t * @param countryCode string\n\t */\n\tprivate getParsedNumber(\n\t\tphoneNumber: string,\n\t\tcountryCode: string\n\t): lpn.PhoneNumber {\n\t\tlet number: lpn.PhoneNumber;\n\t\ttry {\n\t\t\tnumber = this.phoneUtil.parse(phoneNumber, countryCode.toUpperCase());\n\t\t} catch (e) {}\n\t\treturn number;\n\t}\n\n\t/**\n\t * Adjusts input alignment based on the dial code presentation style.\n\t */\n\tprivate checkSeparateDialCodeStyle() {\n\t\tif (this.separateDialCode && this.selectedCountry) {\n\t\t\tconst cntryCd = this.selectedCountry.dialCode;\n\t\t\tthis.separateDialCodeClass =\n\t\t\t\t'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n\t\t} else {\n\t\t\tthis.separateDialCodeClass = '';\n\t\t}\n\t}\n\n\t/**\n\t * Cleans dialcode from phone number string.\n\t * @param phoneNumber string\n\t */\n\tprivate removeDialCode(phoneNumber: string): string {\n\t\tconst number = this.getParsedNumber(phoneNumber, this.selectedCountry.iso2);\n\t\tphoneNumber = this.phoneUtil.format(\n\t\t\tnumber,\n\t\t\tlpn.PhoneNumberFormat[this.numberFormat]\n\t\t);\n\t\tif (phoneNumber.startsWith('+') && this.separateDialCode) {\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n\t\t}\n\t\treturn phoneNumber;\n\t}\n\n\t/**\n\t * Sifts through all countries and returns iso code of the primary country\n\t * based on the number provided.\n\t * @param countryCode country code in number format\n\t * @param number PhoneNumber object\n\t */\n\tprivate getCountryIsoCode(\n\t\tcountryCode: number,\n\t\tnumber: lpn.PhoneNumber\n\t): string | undefined {\n\t\t// Will use this to match area code from the first numbers\n\t\tconst rawNumber = number['values_']['2'].toString();\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n\t\tconst countries = this.allCountries.filter(\n\t\t\t(c) => c.dialCode === countryCode.toString()\n\t\t);\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\n\t\tconst mainCountry = countries.find((c) => c.areaCodes === undefined);\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n\t\tconst secondaryCountries = countries.filter(\n\t\t\t(c) => c.areaCodes !== undefined\n\t\t);\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n\n\t\t/*\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n\t\t\tIf no matches found, fallback to the main country.\n\t\t*/\n\t\tsecondaryCountries.forEach((country) => {\n\t\t\tcountry.areaCodes.forEach((areaCode) => {\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\n\t\t\t\t\tmatchedCountry = country.iso2;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn matchedCountry;\n\t}\n\n\t/**\n\t * Gets formatted example phone number from phoneUtil.\n\t * @param countryCode string\n\t */\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\n\t\ttry {\n\t\t\treturn this.phoneUtil.format(\n\t\t\t\tthis.phoneUtil.getExampleNumber(countryCode),\n\t\t\t\tlpn.PhoneNumberFormat[this.numberFormat]\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn e;\n\t\t}\n\t}\n\n\t/**\n\t * Clearing the list to avoid duplicates (https://github.com/webcat12345/ngx-intl-tel-input/issues/248)\n\t */\n\tprotected fetchCountryData(): void {\n\t\tthis.allCountries = [];\n\n\t\tthis.countryCodeData.allCountries.forEach((c) => {\n\t\t\tconst country: Country = {\n\t\t\t\tname: c[0].toString(),\n\t\t\t\tiso2: c[1].toString(),\n\t\t\t\tdialCode: c[2].toString(),\n\t\t\t\tpriority: +c[3] || 0,\n\t\t\t\tareaCodes: (c[4] as string[]) || undefined,\n\t\t\t\thtmlId: `iti-0__item-${c[1].toString()}`,\n\t\t\t\tflagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\n\t\t\t\tplaceHolder: '',\n\t\t\t};\n\n\t\t\tif (this.enablePlaceholder) {\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(\n\t\t\t\t\tcountry.iso2.toUpperCase()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.allCountries.push(country);\n\t\t});\n\t}\n\n\t/**\n\t * Populates preferredCountriesInDropDown with prefferred countries.\n\t */\n\tprivate updatePreferredCountries() {\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.preferredCountriesInDropDown = [];\n\t\t\tthis.preferredCountries.forEach((iso2) => {\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\n\t\t\t\t\treturn c.iso2 === iso2;\n\t\t\t\t});\n\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Updates selectedCountry.\n\t */\n\tprivate updateSelectedCountry() {\n\t\tif (this.selectedCountryISO) {\n\t\t\tthis.selectedCountry = this.allCountries.find((c) => {\n\t\t\t\treturn c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\n\t\t\t});\n\t\t\tif (this.selectedCountry) {\n\t\t\t\tif (this.phoneNumber) {\n\t\t\t\t\tthis.onPhoneNumberChange();\n\t\t\t\t} else {\n\t\t\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\t\t\tthis.propagateChange(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\nimport { NgxMaskModule } from './ngx-mask/ngx-mask.module';\nexport const dropdownModuleForRoot: ModuleWithProviders<BsDropdownModule> = BsDropdownModule.forRoot();\n\n@NgModule({\n\tdeclarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tdropdownModuleForRoot,\n\t\tNgxMaskModule.forRoot(),\n  ],\n\texports: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n})\nexport class NgxIntlTelInputModule {\n\n}\n","import * as lpn from 'google-libphonenumber';\n\n/*\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\nThis happens because I've expanded control with nativeElement via\n'NativeElementInjectorDirective' to get an access to the element.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport const phoneNumberValidator = (control: any) => {\n\tif (!control.value) {\n\t\treturn;\n\t}\n\t// Find <input> inside injected nativeElement and get its \"id\".\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\n\tconst inputBox: HTMLInputElement = el\n\t\t? el.querySelector('input[type=\"tel\"]')\n\t\t: undefined;\n\tif (inputBox) {\n\t\tconst id = inputBox.id;\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\n\t\tif (isCheckValidation === 'true') {\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\n\n\t\t\tinputBox.setCustomValidity('Invalid field.');\n\n\t\t\tlet number: lpn.PhoneNumber;\n\n\t\t\ttry {\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\n\t\t\t\t\tcontrol.value.number,\n\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tif (isRequired === true) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (control.value) {\n\t\t\t\tif (!number) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\n\t\t\t\t\t\t\tnumber,\n\t\t\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isCheckValidation === 'false') {\n\t\t\tinputBox.setCustomValidity('');\n\n\t\t\tcontrol.clearValidators();\n\t\t}\n\t}\n\treturn;\n};\n","import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n    sufix: string;\n    prefix: string;\n    clearIfNotMatch: boolean;\n    showTemplate: boolean;\n    showMaskTyped: boolean;\n    dropSpecialCharacters: boolean | string[];\n    specialCharacters: string[];\n    patterns: {\n        [character: string]: {\n            pattern: RegExp,\n            optional?: boolean\n        }\n    };\n}\n\nexport type optionsConfig = Partial<IConfig>;\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n    sufix: '',\n    prefix: '',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    dropSpecialCharacters: true,\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\\\"', '\\''],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true\n        },\n        'A': {\n            pattern: new RegExp('\\[a-zA-Z0-9\\]')\n        },\n        'S': {\n            pattern: new RegExp('\\[a-zA-Z\\]')\n        },\n        'd': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'm': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'H': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'h': {\n            pattern: new RegExp('\\\\d'),\n        },\n        's': {\n            pattern: new RegExp('\\\\d'),\n        }\n    }\n};\n","import { Inject, Injectable } from '@angular/core';\nimport { config, IConfig } from './config';\n\n@Injectable()\nexport class MaskApplierService {\n\n    public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n    public showTemplate: IConfig['showTemplate'];\n    public clearIfNotMatch: IConfig['clearIfNotMatch'];\n    public maskExpression: string = '';\n    public maskSpecialCharacters: IConfig['specialCharacters'];\n    public maskAvailablePatterns: IConfig['patterns'];\n    public prefix: IConfig['prefix'];\n    public sufix: IConfig['sufix'];\n    public customPattern: IConfig['patterns'];\n\n    private _shift: Set<number>;\n\n    public constructor(\n        @Inject(config) protected _config: IConfig\n    ) {\n        this._shift = new Set();\n        this.maskSpecialCharacters = this._config!.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config!.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.sufix = this._config.sufix;\n\n\n    }\n    // tslint:disable-next-line:no-any\n    public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    public applyMask(\n        inputValue: string,\n        maskExpression: string,\n        position: number = 0,\n        cb: Function = () => { }\n    ): string {\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        let cursor: number = 0;\n        let result: string = ``;\n        let multi: boolean = false;\n\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n\n        const inputArray: string[] = inputValue.toString()\n            .split('');\n\n        if (maskExpression === 'separator') {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const strForSep: string = inputValue.replace(/\\s/g, '');\n            result = this.separator(strForSep);\n            position = result.length + 1;\n            cursor = position;\n            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n            this._shift.add(shiftStep + this.prefix.length || 0);\n        } else {\n            // tslint:disable-next-line\n            for (let i: number = 0, inputSymbol: string = inputArray[0]; i\n                < inputArray.length; i++ , inputSymbol = inputArray[i]) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                } else if (\n                    maskExpression[cursor + 1] === '*' && multi\n                    && this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n                ) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])\n                    && maskExpression[cursor + 1]\n                    === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                } else if (maskExpression[cursor + 1] === '?' && this._checkSymbolMask(\n                    inputSymbol,\n                    maskExpression[cursor + 2]\n                )) {\n                    result += inputSymbol;\n                    cursor += 3;\n                } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    } if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                             continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n                    if (maskExpression[cursor] === 'd') {\n                        if (Number(inputSymbol) > 3) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor - 1] === 'd') {\n                        if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31) {\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 1) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor - 1] === 'm') {\n                        if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12) {\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                        ? inputArray.length\n                        : cursor;\n                    this._shift.add(shiftStep + this.prefix.length || 0);\n                    i--;\n                } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1\n                    && this.maskAvailablePatterns[maskExpression[cursor]]\n                    && this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n                    cursor++;\n                    i--;\n                } else if ((this.maskExpression[cursor + 1] === '*')\n                    && (this._findSpecialChar(this.maskExpression[cursor + 2]))\n                    && (this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2]) && multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length\n            && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n\n\n        let shift: number = 1;\n        let newPosition: number = position + 1;\n\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n\n        cb(this._shift.has(position) ? shift : 0);\n        let res: string = `${this.prefix}${result}`;\n        res = this.sufix ? `${this.prefix}${result}${this.sufix}` : `${this.prefix}${result}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    public _findSpecialChar(inputSymbol: string): undefined | string {\n        const symbol: string | undefined = this.maskSpecialCharacters\n            .find((val: string) => val === inputSymbol);\n        return symbol;\n    }\n\n    private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n        this.maskAvailablePatterns = this.customPattern\n            ? this.customPattern\n            : this.maskAvailablePatterns;\n        return this.maskAvailablePatterns[maskSymbol]\n            && this.maskAvailablePatterns[maskSymbol].pattern\n            && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);\n    }\n\n    private separator = (str: string) => {\n        str += '';\n        const x: string[] = str.split(' ');\n        let res: string = x[0];\n        const rgx: RegExp = /(\\d+)(\\d{3})/;\n        while (rgx.test(res)) {\n            res = res.replace(rgx, '$1' + ' ' + '$2');\n        }\n        return res;\n    }\n}\n","import {\n  Directive,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig } from './config';\n\n@Directive({\n  selector: '[mask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MaskDirective),\n      multi: true\n    },\n    MaskService\n  ]\n})\nexport class MaskDirective implements ControlValueAccessor {\n  private _maskValue: string;\n  private _inputValue: string;\n  private _position: number | null = null;\n  // tslint:disable-next-line\n  private _start: number;\n  private _end: number;\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n  public onTouch = () => { };\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    private _maskService: MaskService\n  ) { }\n\n\n  @Input('mask')\n  public set maskExpression(value: string) {\n    this._maskValue = value || '';\n    if (!this._maskValue) {\n      return;\n    }\n    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue);\n    this._maskService.formElementProperty = [\n      'value',\n      this._maskService.applyMask(\n        this._inputValue,\n        this._maskService.maskExpression\n      )\n    ];\n  }\n\n  @Input()\n  public set specialCharacters(value: IConfig['specialCharacters']) {\n    if (\n      !value ||\n      !Array.isArray(value) ||\n      (Array.isArray(value) && !value.length)\n    ) {\n      return;\n    }\n    this._maskService.maskSpecialCharacters = value;\n  }\n\n  @Input()\n  public set patterns(value: IConfig['patterns']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.maskAvailablePatterns = value;\n  }\n\n  @Input()\n  public set prefix(value: IConfig['prefix']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.prefix = value;\n  }\n\n  @Input()\n  public set sufix(value: IConfig['sufix']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.sufix = value;\n  }\n\n  @Input()\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n    this._maskService.dropSpecialCharacters = value;\n  }\n\n  @Input()\n  public set showMaskTyped(value: IConfig['showMaskTyped']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.showMaskTyped = value;\n  }\n\n  @Input()\n  public set showTemplate(value: IConfig['showTemplate']) {\n    this._maskService.showTemplate = value;\n  }\n\n  @Input()\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n    this._maskService.clearIfNotMatch = value;\n  }\n\n  @HostListener('input', ['$event'])\n  public onInput(e: KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    this._inputValue = el.value;\n    if (!this._maskValue) {\n      this.onChange(el.value);\n      return;\n    }\n    const position: number = (el.selectionStart as number) === 1\n      ? (el.selectionStart as number) + this._maskService.prefix.length\n      : el.selectionStart as number;\n    let caretShift: number = 0;\n    this._maskService.applyValueChanges(\n      position,\n      (shift: number) => (caretShift = shift)\n    );\n    // only set the selection if the element is active\n    if (this.document.activeElement !== el) {\n      return;\n    }\n    el.selectionStart = el.selectionEnd =\n      this._position !== null\n        ? this._position\n        : position +\n        // tslint:disable-next-line\n        ((e as any).inputType === 'deleteContentBackward' ? 0 : caretShift);\n    this._position = null;\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this._maskService.clearIfNotMatchFn();\n    this.onTouch();\n  }\n\n  @HostListener('click', ['$event'])\n  public onFocus(e: MouseEvent | KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    if (\n      el !== null && el.selectionStart !== null &&\n      el.selectionStart === el.selectionEnd &&\n      el.selectionStart > this._maskService.prefix.length &&\n      // tslint:disable-next-line\n      (e as any).keyCode !== 38\n    ) {\n      return;\n    }\n    if (this._maskService.showMaskTyped) {\n      this._maskService.maskIsShown = this._maskService.maskExpression.replace(/[0-9]/g, '_');\n    }\n    el.value = !el.value || el.value === this._maskService.prefix\n      ? this._maskService.prefix + this._maskService.maskIsShown\n      : el.value;\n    /** fix of cursor position with prefix when mouse click occur */\n    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\n      el.selectionStart = this._maskService.prefix.length;\n      return;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  public a(e: KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    if (e.keyCode === 38) {\n      e.preventDefault();\n    }\n    if (e.keyCode === 37 || e.keyCode === 8) {\n      if ((el.selectionStart as number) <= this._maskService.prefix.length\n        && (el.selectionEnd as number) <= this._maskService.prefix.length) {\n        e.preventDefault();\n      }\n      this.onFocus(e);\n      if (e.keyCode === 8\n        && el.selectionStart === 0\n        && el.selectionEnd === el.value.length) {\n        el.value = this._maskService.prefix;\n        this._position = this._maskService.prefix ? this._maskService.prefix.length : 1;\n        this.onInput(e);\n      }\n    }\n  }\n\n  @HostListener('paste')\n  public onPaste(): void {\n    this._position = Number.MAX_SAFE_INTEGER;\n  }\n\n  /** It writes the value in the input */\n  public async writeValue(inputValue: string): Promise<void> {\n    if (inputValue === undefined) {\n      inputValue = '';\n    }\n    if (typeof inputValue === 'number') {\n      inputValue = String(inputValue);\n      this._maskService.isNumberValue = true;\n    }\n    inputValue && this._maskService.maskExpression ||\n      this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped)\n      ? (this._maskService.formElementProperty = [\n        'value',\n        this._maskService.applyMask(\n          inputValue,\n          this._maskService.maskExpression\n        )\n      ])\n      : (this._maskService.formElementProperty = ['value', inputValue]);\n    this._inputValue = inputValue;\n  }\n\n  // tslint:disable-next-line\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n    this._maskService.onChange = this.onChange;\n  }\n\n  // tslint:disable-next-line\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /** It disables the input element */\n  public setDisabledState(isDisabled: boolean): void {\n    this._maskService.formElementProperty = ['disabled', isDisabled];\n  }\n  private _repeatPatternSymbols(maskExp: string): string {\n    return maskExp.match(/{[0-9]+}/)\n      && maskExp.split('')\n        .reduce((accum: string, currval: string, index: number): string => {\n          this._start = (currval === '{') ? index : this._start;\n\n          if (currval !== '}') {\n            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n          }\n          this._end = index;\n          const repeatNumber: number = Number(maskExp\n            .slice(this._start + 1, this._end));\n          const repaceWith: string = new Array(repeatNumber + 1)\n            .join(maskExp[this._start - 1]);\n          return accum + repaceWith;\n        }, '') || maskExp;\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { MaskApplierService } from './mask-applier.service';\nimport { IConfig } from './config';\n\n@Pipe({\n  name: 'mask',\n  pure: true\n})\nexport class MaskPipe implements PipeTransform {\n\n  public constructor(private _maskService: MaskApplierService) { }\n\n  public transform(value: string|number, mask: string | [string, IConfig['patterns']]): string {\n    if (!value) {\n      return '';\n    }\n    if (typeof mask === 'string') {\n      return this._maskService.applyMask(`${value}`, mask);\n    }\n    return this._maskService.applyMaskWithPattern(`${value}`, mask);\n  }\n}\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { MaskApplierService } from './mask-applier.service';\n\n@Injectable()\nexport class MaskService extends MaskApplierService {\n  public maskExpression: string = '';\n  public isNumberValue: boolean = false;\n  public showMaskTyped: boolean = false;\n  public maskIsShown: string = '';\n  private _formElement: HTMLInputElement;\n  // tslint:disable-next-line\n  public onChange = (_: any) => {};\n  public onTouch = () => {};\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    @Inject(config) protected _config: IConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2\n  ) {\n    super(_config);\n    this._formElement = this._elementRef.nativeElement;\n  }\n\n  public applyMask(\n    inputValue: string,\n    maskExpression: string,\n    position: number = 0,\n    cb: Function = () => {}\n  ): string  {\n\n    this.maskIsShown = this.showMaskTyped\n        ? this.maskExpression.replace(/\\w/g, '_')\n        : '';\n    if (!inputValue && this.showMaskTyped) {\n      return this.prefix + this.maskIsShown;\n    }\n    const result: string  = super.applyMask(\n      inputValue,\n      maskExpression,\n      position,\n      cb\n    );\n    Array.isArray(this.dropSpecialCharacters)\n        ? this.onChange(this._removeMask(this._removeSufix(this._removePrefix(result)), this.dropSpecialCharacters))\n        : this.dropSpecialCharacters === true\n         ? this.onChange(\n          this.isNumberValue\n             ? Number(this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters))\n             : this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)\n            )\n         : this.onChange(this._removeSufix(this._removePrefix(result)));\n          let ifMaskIsShown: string = '';\n          if (!this.showMaskTyped) {\n            return result;\n          }\n          const resLen: number = result.length;\n          const prefNmask: string = this.prefix + this.maskIsShown;\n          ifMaskIsShown = prefNmask.slice(resLen);\n    return result + ifMaskIsShown;\n  }\n\n  public applyValueChanges(\n    position: number = 0,\n    cb: Function = () => {}\n  ): void {\n    const maskedInput: string | number = this.applyMask(\n      this._formElement.value,\n      this.maskExpression,\n      position,\n      cb\n    );\n    this._formElement.value = maskedInput;\n    if (this._formElement === this.document.activeElement) {\n      return;\n    }\n    this.clearIfNotMatchFn();\n  }\n\n  public showMaskInInput(): void {\n    if (this.showMaskTyped) {\n      this.maskIsShown = this.maskExpression.replace(/\\w/g, '_');\n    }\n  }\n\n  public clearIfNotMatchFn(): void {\n    if (\n      this.clearIfNotMatch === true &&\n      this.maskExpression.length !== this._formElement.value.length\n    ) {\n      this.formElementProperty = ['value', ''];\n      this.applyMask(this._formElement.value, this.maskExpression);\n    }\n  }\n\n  public set formElementProperty([name, value]: [string, string | boolean]) {\n    this._renderer.setProperty(this._formElement, name, value);\n  }\n\n  private _removeMask(\n    value: string,\n    specialCharactersForRemove: string[]\n  ): string {\n    return value\n      ? value.replace(this._regExpForRemove(specialCharactersForRemove), '')\n      : value;\n  }\n\n  private _removePrefix(value: string): string {\n    if (!this.prefix) {\n      return value;\n    }\n    return value\n      ? value.replace(this.prefix, '')\n      : value;\n  }\n\n  private _removeSufix(value: string): string {\n    if (!this.sufix) {\n      return value;\n    }\n    return value\n      ? value.replace(this.sufix, '')\n      : value;\n  }\n\n  private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\n    return new RegExp(\n      specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'),\n      'gi'\n    );\n  }\n}","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nimport { MaskDirective } from './mask.directive';\nimport { MaskPipe } from './mask.pipe';\n\n@NgModule({\n  providers: [MaskApplierService],\n  exports: [MaskDirective, MaskPipe],\n  declarations: [MaskDirective, MaskPipe]\n})\nexport class NgxMaskModule {\n\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders<any> {\n    return {\n      ngModule: NgxMaskModule,\n      providers: [\n        {\n          provide: NEW_CONFIG,\n          useValue: configValue\n        },\n        {\n          provide: INITIAL_CONFIG,\n          useValue: initialConfig\n        },\n        {\n          provide: config,\n          useFactory: _configFactory,\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\n        },\n      ]\n    };\n  }\n  public static forChild(configValue?: optionsConfig): ModuleWithProviders<any> {\n    return {\n      ngModule: NgxMaskModule,\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function _configFactory\n(initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\n}\n","/*\n * Public API Surface of ngx-intl-tel-input\n */\n\nexport * from './lib/ngx-intl-tel-input.component';\nexport * from './lib/directives/native-element-injector.directive';\nexport * from './lib/ngx-intl-tel-input.module';\nexport * from './lib/enums/country-iso.enum';\nexport * from './lib/enums/search-country-field.enum';\nexport * from './lib/enums/phone-number-format.enum';\nexport * from './lib/interfaces/change-data';\n","import { CountryISO } from 'projects/ngx-intl-tel-input/src/lib/enums/country-iso.enum';\nimport { SearchCountryField } from 'projects/ngx-intl-tel-input/src/lib/enums/search-country-field.enum';\n\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PhoneNumberFormat } from 'projects/ngx-intl-tel-input/src/public_api';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\tseparateDialCode = false;\n\tSearchCountryField = SearchCountryField;\n\tCountryISO = CountryISO;\n\tPhoneNumberFormat = PhoneNumberFormat;\n\tpreferredCountries: CountryISO[] = [\n\t\tCountryISO.UnitedStates,\n\t\tCountryISO.UnitedKingdom,\n\t];\n\tphoneForm = new FormGroup({\n\t\tphone: new FormControl(undefined, [Validators.required]),\n\t});\n\n\tchangePreferredCountries() {\n\t\tthis.preferredCountries = [CountryISO.India, CountryISO.Canada];\n\t}\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"margin: 50px\">\n\t<h1>Test International Telephone Input Form</h1>\n\t<br>\n\t<div class=\"wrapper\">\n\t\t<button (click)=\"changePreferredCountries()\">Change Preferred Countries</button>\n\t</div>\n\t<div class=\"wrapper\">\n\t\t<input type=\"checkbox\"\n\t\t\t[(ngModel)]=\"separateDialCode\">\n\t\t<label>&nbsp;Separate Dial Code?</label>\n\t</div>\n\t<form #f=\"ngForm\"\n\t\t[formGroup]=\"phoneForm\">\n\t\t<div class=\"wrapper\">\n\t\t\t<ngx-intl-tel-input [cssClass]=\"'custom'\"\n\t\t\t\t[preferredCountries]=\"preferredCountries\"\n\t\t\t\t[enableAutoCountrySelect]=\"true\"\n\t\t\t\t[enablePlaceholder]=\"true\"\n\t\t\t\t[searchCountryFlag]=\"true\"\n\t\t\t\t[searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n\t\t\t\t[selectFirstCountry]=\"false\"\n\t\t\t\t[selectedCountryISO]=\"CountryISO.India\"\n\t\t\t\t[maxLength]=\"15\"\n\t\t\t\t[phoneValidation]=\"true\"\n\t\t\t\t[separateDialCode]=\"separateDialCode\"\n\t\t\t\t[numberFormat]=\"PhoneNumberFormat.National\"\n\t\t\t\tname=\"phone\"\n\t\t\t\tformControlName=\"phone\">\n\t\t\t</ngx-intl-tel-input>\n\t\t</div>\n\t\t<div class=\"wrapper\">\n\t\t\t<button (click)=\"f.reset()\">Reset</button>\n\t\t</div>\n\t</form>\n\t<br>\n\t<div><strong>Is input valid:</strong>\n\t\t<pre>{{ !f.form.controls['phone'].invalid }}</pre>\n\t</div>\n\t<div><strong>Is input touched:</strong>\n\t\t<pre>{{ f.form.controls['phone'].touched }}</pre>\n\t</div>\n\t<div><strong>Is form valid:</strong>\n\t\t<pre>{{ f.form.valid }}</pre>\n\t</div>\n\t<div><strong>Form value:</strong>\n\t\t<pre>{{ f.form.value | json }}</pre>\n\t</div>\n\t<div><strong>Form validation errors:</strong>\n\t\t<pre>{{ f.form.controls['phone'].errors | json }}</pre>\n\t</div>\n</div>\n","import {\n\tNgxIntlTelInputModule\n} from 'projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.module';\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tNgxIntlTelInputModule,\n\t\tBrowserAnimationsModule,\n\t],\n\tproviders: [],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}